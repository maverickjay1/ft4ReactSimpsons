{"ast":null,"code":"var _jsxFileName = \"/Users/maverick/Desktop/Dev/ft4ReactSimpsons/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      simpsons: []\n    };\n    this.onLikeClick = id => {\n      const simpsons = [...this.state.simpsons];\n      const index = simpsons.findIndex(item => item.id === id);\n      simpsons[index].liked = !simpsons[index].liked;\n      this.setState({\n        simpsons\n      });\n    };\n    this.onDeleteClick = id => {\n      const simpsons = [...this.state.simpsons];\n      const index = simpsons.findIndex(item => item.id === id);\n      simpsons.splice(index, 1);\n      this.setState({\n        simpsons\n      });\n    };\n    this.onSortSelection = value => {\n      console.log(value);\n    };\n  }\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await axios.get(`https://thesimpsonsquoteapi.glitch.me/quotes?count=25`);\n      //add a unique ID (most decent APIs will do this for you automatically)\n      //also adding a liked property\n      data.forEach(element => {\n        element.id = Math.round(Math.random() * 1000000);\n        element.liked = false;\n      });\n      this.setState({\n        simpsons: data\n      });\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  }\n  render() {\n    console.log(this.state);\n    const {\n      simpsons\n    } = this.state;\n    if (!simpsons) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sort\",\n          children: \"Sort by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"sort\",\n          id: \"sort\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"az\",\n            children: \"A to Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"za\",\n            children: \"Z to A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), simpsons.map(character => {\n        return /*#__PURE__*/_jsxDEV(Character, {\n          character: character,\n          onLikeClick: this.onLikeClick,\n          onDeleteClick: this.onDeleteClick\n        }, character.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","Character","Spinner","jsxDEV","_jsxDEV","App","constructor","args","state","simpsons","onLikeClick","id","index","findIndex","item","liked","setState","onDeleteClick","splice","onSortSelection","value","console","log","componentDidMount","data","get","forEach","element","Math","round","random","e","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","map","character"],"sources":["/Users/maverick/Desktop/Dev/ft4ReactSimpsons/src/App.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { simpsons: [] };\n\n  async componentDidMount() {\n    try {\n      const { data } = await axios.get(\n        `https://thesimpsonsquoteapi.glitch.me/quotes?count=25`\n      );\n      //add a unique ID (most decent APIs will do this for you automatically)\n      //also adding a liked property\n      data.forEach((element) => {\n        element.id = Math.round(Math.random() * 1000000);\n        element.liked = false;\n      });\n\n      this.setState({ simpsons: data });\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  }\n\n  onLikeClick = (id) => {\n    const simpsons = [...this.state.simpsons];\n    const index = simpsons.findIndex((item) => item.id === id);\n    simpsons[index].liked = !simpsons[index].liked;\n    this.setState({ simpsons });\n  };\n\n  onDeleteClick = (id) => {\n    const simpsons = [...this.state.simpsons];\n    const index = simpsons.findIndex((item) => item.id === id);\n    simpsons.splice(index, 1);\n    this.setState({ simpsons });\n  };\n\n  onSortSelection = (value) => {\n    console.log(value);\n  };\n\n  render() {\n    console.log(this.state);\n    const { simpsons } = this.state;\n\n    if (!simpsons) {\n      return (\n        <div className=\"container\">\n          <Spinner />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"controls\">\n          <label htmlFor=\"sort\">Sort by</label>\n          <select name=\"sort\" id=\"sort\">\n            <option value=\"az\">A to Z</option>\n            <option value=\"za\">Z to A</option>\n          </select>\n        </div>\n\n        {simpsons.map((character) => {\n          return (\n            <Character\n              key={character.id}\n              character={character}\n              onLikeClick={this.onLikeClick}\n              onDeleteClick={this.onDeleteClick}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}