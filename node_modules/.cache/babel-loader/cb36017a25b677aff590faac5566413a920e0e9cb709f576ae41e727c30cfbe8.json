{"ast":null,"code":"var _jsxFileName = \"/Users/maverick/Desktop/Dev/ft4ReactSimpsons/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.onLikeClick = id => {\n      const simpsons = {\n        ...this.state.simpsons\n      };\n      const index = simpsons.findIndex(item => item.id === id);\n      simpsons[index].liked = !simpsons[index].liked;\n      this.setState({\n        simpsons\n      });\n    };\n    this.onDeleteClick = id => {\n      const simpsons = {\n        ...this.state.simpsons\n      };\n      const index = simpsons.findIndex(item => item.id === id);\n      simpsons.splice(index);\n      this.setState({\n        simpsons\n      });\n    };\n  }\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await axios.get(`https://thesimpsonsquoteapi.glitch.me/quotes?count=25`);\n      //add a unique ID (most decent APIs will do this for you automatically)\n      //also adding a liked property\n      data.forEach(element => {\n        element.id = Math.round(Math.random() * 1000000);\n        element.liked = false;\n      });\n      this.setState({\n        simpsons: data\n      });\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  }\n  render() {\n    console.log(this.state);\n    const {\n      simpsons\n    } = this.state;\n    if (!simpsons) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sort\",\n          children: \"Sort by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), simpsons.map(character => {\n        return /*#__PURE__*/_jsxDEV(Character, {\n          character: character,\n          onLikeClick: this.onLikeClick,\n          onDeleteClick: this.onDeleteClick\n        }, character.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","Character","Spinner","jsxDEV","_jsxDEV","App","constructor","args","state","onLikeClick","id","simpsons","index","findIndex","item","liked","setState","onDeleteClick","splice","componentDidMount","data","get","forEach","element","Math","round","random","e","console","log","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","map","character"],"sources":["/Users/maverick/Desktop/Dev/ft4ReactSimpsons/src/App.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  async componentDidMount() {\n    try {\n      const { data } = await axios.get(\n        `https://thesimpsonsquoteapi.glitch.me/quotes?count=25`\n      );\n      //add a unique ID (most decent APIs will do this for you automatically)\n      //also adding a liked property\n      data.forEach((element) => {\n        element.id = Math.round(Math.random() * 1000000);\n        element.liked = false;\n      });\n\n      this.setState({ simpsons: data });\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  }\n\n  onLikeClick = (id) => {\n    const simpsons = { ...this.state.simpsons };\n    const index = simpsons.findIndex((item) => item.id === id);\n    simpsons[index].liked = !simpsons[index].liked;\n    this.setState({ simpsons });\n  };\n\n  onDeleteClick = (id) => {\n    const simpsons = { ...this.state.simpsons };\n    const index = simpsons.findIndex((item) => item.id === id);\n    simpsons.splice(index);\n    this.setState({ simpsons });\n  };\n\n  render() {\n    console.log(this.state);\n    const { simpsons } = this.state;\n\n    if (!simpsons) {\n      return (\n        <div className=\"container\">\n          <Spinner />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"controls\">\n          <label htmlFor=\"sort\">Sort by</label>\n        </div>\n        {simpsons.map((character) => {\n          return (\n            <Character\n              key={character.id}\n              character={character}\n              onLikeClick={this.onLikeClick}\n              onDeleteClick={this.onDeleteClick}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}