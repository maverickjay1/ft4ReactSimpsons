{"ast":null,"code":"var _jsxFileName = \"/Users/maverick/Desktop/Dev/ft4-react-counterV2/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.onLikeClick = id => {\n      const simpsons = {\n        ...this.state.simpsons\n      };\n    };\n  }\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await axios.get(`https://thesimpsonsquoteapi.glitch.me/quotes?count=25`);\n\n      //add a unique ID (most decent APIs will do this for you automatically)\n      //also adding a liked property\n      data.array.forEach(element => {\n        element.id = Math.round(Math.random() * 1000000);\n        element.liked = false;\n      });\n      this.setState({\n        simpsons: data\n      });\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  }\n  render() {\n    console.log(this.state);\n    const {\n      simpsons\n    } = this.state;\n    if (!simpsons) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: simpsons.map(character => {\n        return /*#__PURE__*/_jsxDEV(Character, {\n          character: character,\n          onLikeClick: this.onLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","Character","Spinner","jsxDEV","_jsxDEV","App","constructor","args","state","onLikeClick","id","simpsons","componentDidMount","data","get","array","forEach","element","Math","round","random","liked","setState","e","console","log","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","character"],"sources":["/Users/maverick/Desktop/Dev/ft4-react-counterV2/src/App.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Character from \"./components/Character\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  async componentDidMount() {\n    try {\n      const { data } = await axios.get(\n        `https://thesimpsonsquoteapi.glitch.me/quotes?count=25`\n      );\n\n      //add a unique ID (most decent APIs will do this for you automatically)\n      //also adding a liked property\n      data.array.forEach((element) => {\n        element.id = Math.round(Math.random() * 1000000);\n        element.liked = false;\n      });\n\n      this.setState({ simpsons: data });\n    } catch (e) {\n      console.log(\"Looks like the API is down!\");\n    }\n  }\n\n  onLikeClick = (id) => {\n    const simpsons = { ...this.state.simpsons };\n  };\n\n  render() {\n    console.log(this.state);\n    const { simpsons } = this.state;\n\n    if (!simpsons) {\n      return (\n        <div className=\"container\">\n          <Spinner />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        {simpsons.map((character) => {\n          return (\n            <Character character={character} onLikeClick={this.onLikeClick} />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG,CAAC,CAAC;IAAA,KAqBVC,WAAW,GAAIC,EAAE,IAAK;MACpB,MAAMC,QAAQ,GAAG;QAAE,GAAG,IAAI,CAACH,KAAK,CAACG;MAAS,CAAC;IAC7C,CAAC;EAAA;EArBD,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC7B,uDACH,CAAC;;MAED;MACA;MACAD,IAAI,CAACE,KAAK,CAACC,OAAO,CAAEC,OAAO,IAAK;QAC9BA,OAAO,CAACP,EAAE,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC;QAChDH,OAAO,CAACI,KAAK,GAAG,KAAK;MACvB,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAAC;QAAEX,QAAQ,EAAEE;MAAK,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOU,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C;EACF;EAMAC,MAAMA,CAAA,EAAG;IACPF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,KAAK,CAAC;IACvB,MAAM;MAAEG;IAAS,CAAC,GAAG,IAAI,CAACH,KAAK;IAE/B,IAAI,CAACG,QAAQ,EAAE;MACb,oBACEP,OAAA;QAAKuB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBxB,OAAA,CAACF,OAAO;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAEV;IAEA,oBACE5B,OAAA;MAAKuB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBjB,QAAQ,CAACsB,GAAG,CAAEC,SAAS,IAAK;QAC3B,oBACE9B,OAAA,CAACH,SAAS;UAACiC,SAAS,EAAEA,SAAU;UAACzB,WAAW,EAAE,IAAI,CAACA;QAAY;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAEtE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}